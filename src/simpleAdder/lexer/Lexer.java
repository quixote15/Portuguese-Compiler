/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.lexer;

import java.io.*;
import simpleAdder.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.NORMAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                                case 0: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteiro(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentificador(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReal(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBooleano(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaractere(text, line, pos); }
    Token new5(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComent(text, line, pos); }
    Token new6(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEspaco(text, line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBracket(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBracket(line, pos); }
    Token new9(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(text, line, pos); }
    Token new10(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTipo(text, line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDPonto(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColcheteA(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColcheteF(line, pos); }
    Token new14(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSoma(text, line, pos); }
    Token new15(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSubt(text, line, pos); }
    Token new16(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(text, line, pos); }
    Token new17(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDivi(text, line, pos); }
    Token new18(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaior(text, line, pos); }
    Token new19(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenor(text, line, pos); }
    Token new20(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorigual(text, line, pos); }
    Token new21(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorigual(text, line, pos); }
    Token new22(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgual(text, line, pos); }
    Token new23(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNao(text, line, pos); }
    Token new24(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TE(text, line, pos); }
    Token new25(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOu(text, line, pos); }
    Token new26(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtribuicao(text, line, pos); }
    Token new27(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFinal(text, line, pos); }
    Token new28(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInicio(text, line, pos); }
    Token new29(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFim(text, line, pos); }
    Token new30(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSe(text, line, pos); }
    Token new31(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSenao(text, line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnquanto(line, pos); }
    Token new33(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPara(text, line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAvalie(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaso(text, line, pos); }
    Token new36(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVerdadeiro(text, line, pos); }
    Token new37(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalso(text, line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentEnd(line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentBody(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlash(line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {39, 39, 5}, {42, 42, 6}, {43, 43, 7}, {45, 45, 8}, {47, 47, 9}, {48, 57, 10}, {58, 58, 11}, {59, 59, 12}, {60, 60, 13}, {61, 61, 14}, {62, 62, 15}, {65, 90, 16}, {91, 91, 17}, {93, 93, 18}, {95, 95, 19}, {97, 97, 20}, {98, 98, 21}, {99, 99, 22}, {100, 100, 23}, {101, 101, 24}, {102, 102, 25}, {103, 104, 23}, {105, 105, 26}, {106, 109, 23}, {110, 110, 27}, {111, 111, 28}, {112, 112, 29}, {113, 113, 23}, {114, 114, 30}, {115, 115, 31}, {116, 117, 23}, {118, 118, 32}, {119, 122, 23}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{48, 57, 33}, {65, 90, 34}, {97, 122, 35}, },
            {{32, 32, 36}, },
            {{32, 32, 37}, {48, 57, 38}, },
            {{32, 32, 39}, {48, 57, 40}, },
            {{32, 32, 41}, {42, 42, 42}, {47, 47, 43}, },
            {{44, 44, 44}, {48, 57, 45}, {65, 90, 46}, {97, 122, 47}, },
            {{61, 61, 48}, },
            {{10, 10, 49}, },
            {{32, 32, 50}, {61, 61, 51}, },
            {{32, 32, 52}, },
            {{32, 32, 53}, {61, 61, 54}, },
            {{48, 57, 55}, {65, 90, 16}, {97, 122, 47}, },
            {},
            {},
            {{10, 10, 56}, {48, 57, 57}, {65, 90, 58}, {95, 95, 59}, {97, 122, 60}, },
            {{10, 10, 56}, {48, 57, 61}, {65, 90, 62}, {95, 95, 59}, {97, 117, 63}, {118, 118, 64}, {119, 122, 63}, },
            {{10, 95, -22}, {97, 110, 63}, {111, 111, 65}, {112, 122, 63}, },
            {{10, 95, -22}, {97, 97, 66}, {98, 122, 63}, },
            {{10, 95, -22}, {97, 122, 63}, },
            {{10, 10, 56}, {32, 32, 67}, {48, 95, -22}, {97, 109, 63}, {110, 110, 68}, {111, 122, 63}, },
            {{10, 95, -22}, {97, 97, 69}, {98, 104, 63}, {105, 105, 70}, {106, 122, 63}, },
            {{10, 95, -22}, {97, 109, 63}, {110, 110, 71}, {111, 122, 63}, },
            {{10, 95, -22}, {97, 97, 72}, {98, 122, 63}, },
            {{10, 95, -22}, {97, 116, 63}, {117, 117, 73}, {118, 122, 63}, },
            {{10, 95, -22}, {97, 97, 74}, {98, 122, 63}, },
            {{10, 95, -22}, {97, 100, 63}, {101, 101, 75}, {102, 122, 63}, },
            {{10, 100, -32}, {101, 101, 76}, {102, 122, 63}, },
            {{10, 100, -32}, {101, 101, 77}, {102, 122, 63}, },
            {{39, 39, 78}, },
            {{39, 39, 78}, {65, 90, 34}, },
            {{39, 39, 78}, {97, 122, 35}, },
            {{32, 32, 36}, },
            {{32, 32, 37}, },
            {{44, 44, 79}, {48, 57, 38}, },
            {{32, 32, 39}, },
            {{44, 44, 80}, {48, 57, 40}, },
            {{32, 32, 41}, },
            {},
            {{0, 9, 81}, {11, 12, 81}, {14, 65535, 81}, },
            {{48, 57, 82}, },
            {{44, 122, -12}, },
            {{48, 57, 55}, {65, 122, -12}, },
            {{48, 122, -48}, },
            {{32, 32, 83}, },
            {},
            {{32, 32, 50}, },
            {{32, 32, 84}, },
            {{32, 32, 52}, },
            {{32, 32, 53}, },
            {{32, 32, 85}, },
            {{48, 122, -48}, },
            {{10, 122, -21}, },
            {{10, 122, -21}, },
            {{10, 122, -21}, },
            {{10, 122, -21}, },
            {{10, 122, -21}, },
            {{10, 95, -22}, {97, 122, 86}, },
            {{10, 122, -63}, },
            {{10, 122, -25}, },
            {{10, 95, -22}, {97, 97, 87}, {98, 122, 63}, },
            {{10, 110, -23}, {111, 111, 88}, {112, 122, 63}, },
            {{10, 95, -22}, {97, 114, 63}, {115, 115, 89}, {116, 122, 63}, },
            {{32, 32, 67}, },
            {{10, 95, -22}, {97, 112, 63}, {113, 113, 90}, {114, 122, 63}, },
            {{10, 95, -22}, {97, 107, 63}, {108, 108, 91}, {109, 122, 63}, },
            {{10, 95, -22}, {97, 108, 63}, {109, 109, 92}, {110, 122, 63}, },
            {{10, 95, -22}, {97, 104, 63}, {105, 105, 93}, {106, 115, 63}, {116, 116, 94}, {117, 122, 63}, },
            {{10, 110, -23}, {111, 111, 95}, {112, 122, 63}, },
            {{10, 10, 56}, {32, 32, 96}, {48, 122, -25}, },
            {{10, 95, -22}, {97, 113, 63}, {114, 114, 97}, {115, 122, 63}, },
            {{10, 95, -22}, {97, 97, 98}, {98, 122, 63}, },
            {{10, 10, 56}, {32, 32, 99}, {48, 109, -26}, {110, 110, 100}, {111, 122, 63}, },
            {{10, 113, -76}, {114, 114, 101}, {115, 122, 63}, },
            {},
            {{48, 57, 102}, },
            {{48, 57, 103}, },
            {{0, 65535, -45}, },
            {{48, 57, 82}, },
            {{32, 32, 83}, },
            {{32, 32, 84}, },
            {{32, 32, 85}, },
            {{10, 122, -63}, },
            {{10, 107, -71}, {108, 108, 104}, {109, 122, 63}, },
            {{10, 107, -71}, {108, 108, 105}, {109, 122, 63}, },
            {{10, 110, -23}, {111, 111, 106}, {112, 122, 63}, },
            {{10, 116, -30}, {117, 117, 107}, {118, 122, 63}, },
            {{10, 114, -68}, {115, 115, 108}, {116, 122, 63}, },
            {{10, 10, 56}, {32, 32, 109}, {48, 122, -25}, },
            {{10, 95, -22}, {97, 98, 63}, {99, 99, 110}, {100, 122, 63}, },
            {{10, 100, -32}, {101, 101, 111}, {102, 122, 63}, },
            {{10, 10, 56}, {32, 32, 112}, {48, 122, -25}, },
            {{32, 32, 96}, },
            {{10, 95, -22}, {97, 97, 113}, {98, 122, 63}, },
            {{10, 107, -71}, {108, 108, 114}, {109, 122, 63}, },
            {{32, 32, 99}, },
            {{10, 95, -22}, {97, 97, 115}, {98, 122, 63}, },
            {{10, 95, -22}, {97, 99, 63}, {100, 100, 116}, {101, 122, 63}, },
            {{48, 57, 102}, },
            {{48, 57, 103}, },
            {{10, 104, -73}, {105, 105, 117}, {106, 122, 63}, },
            {{10, 100, -32}, {101, 101, 118}, {102, 122, 63}, },
            {{10, 10, 56}, {32, 32, 119}, {48, 122, -25}, },
            {{10, 95, -22}, {97, 97, 120}, {98, 122, 63}, },
            {{10, 110, -23}, {111, 111, 121}, {112, 122, 63}, },
            {{32, 32, 109}, },
            {{10, 104, -73}, {105, 105, 122}, {106, 122, 63}, },
            {{10, 104, -73}, {105, 105, 123}, {106, 122, 63}, },
            {{32, 32, 112}, },
            {{10, 10, 56}, {32, 32, 124}, {48, 122, -25}, },
            {{10, 122, -25}, },
            {{10, 110, -23}, {111, 111, 125}, {112, 122, 63}, },
            {{10, 95, -22}, {97, 97, 126}, {98, 122, 63}, },
            {{10, 100, -32}, {101, 101, 127}, {102, 122, 63}, },
            {{10, 95, -22}, {97, 97, 128}, {98, 122, 63}, },
            {{32, 32, 119}, },
            {{10, 109, -28}, {110, 110, 129}, {111, 122, 63}, },
            {{10, 10, 56}, {32, 32, 130}, {48, 122, -25}, },
            {{10, 110, -23}, {111, 111, 131}, {112, 122, 63}, },
            {{10, 113, -76}, {114, 114, 132}, {115, 122, 63}, },
            {{32, 32, 124}, },
            {{10, 10, 56}, {32, 32, 133}, {48, 122, -25}, },
            {{10, 99, -103}, {100, 100, 134}, {101, 122, 63}, },
            {{10, 10, 56}, {32, 32, 135}, {48, 122, -25}, },
            {{10, 109, -28}, {110, 110, 136}, {111, 122, 63}, },
            {{10, 95, -22}, {97, 115, 63}, {116, 116, 137}, {117, 122, 63}, },
            {{32, 32, 130}, },
            {{10, 10, 56}, {32, 32, 138}, {48, 122, -25}, },
            {{10, 110, -23}, {111, 111, 139}, {112, 122, 63}, },
            {{32, 32, 133}, },
            {{10, 100, -32}, {101, 101, 140}, {102, 122, 63}, },
            {{32, 32, 135}, },
            {{10, 110, -23}, {111, 111, 141}, {112, 122, 63}, },
            {{10, 110, -23}, {111, 111, 142}, {112, 122, 63}, },
            {{32, 32, 138}, },
            {{10, 122, -25}, },
            {{10, 104, -73}, {105, 105, 143}, {106, 122, 63}, },
            {{10, 122, -25}, },
            {{10, 122, -25}, },
            {{10, 113, -76}, {114, 114, 144}, {115, 122, 63}, },
            {{10, 110, -23}, {111, 111, 145}, {112, 122, 63}, },
            {{10, 10, 56}, {32, 32, 146}, {48, 122, -25}, },
            {{32, 32, 146}, },
        }
        { // COMMENT
            {{0, 8, 1}, {9, 9, 2}, {10, 10, 3}, {11, 12, 1}, {13, 13, 4}, {14, 31, 1}, {32, 32, 5}, {33, 38, 1}, {39, 39, 6}, {40, 41, 1}, {42, 42, 7}, {43, 43, 8}, {44, 44, 1}, {45, 45, 9}, {46, 46, 1}, {47, 47, 10}, {48, 57, 11}, {58, 58, 12}, {59, 59, 13}, {60, 60, 14}, {61, 61, 15}, {62, 62, 16}, {63, 64, 1}, {65, 90, 17}, {91, 91, 18}, {92, 92, 1}, {93, 93, 19}, {94, 94, 1}, {95, 95, 20}, {96, 96, 1}, {97, 97, 21}, {98, 98, 22}, {99, 99, 23}, {100, 100, 24}, {101, 101, 25}, {102, 102, 26}, {103, 104, 24}, {105, 105, 27}, {106, 109, 24}, {110, 110, 28}, {111, 111, 29}, {112, 112, 30}, {113, 113, 24}, {114, 114, 31}, {115, 115, 32}, {116, 117, 24}, {118, 118, 33}, {119, 122, 24}, {123, 65535, 1}, },
            {{0, 41, 1}, {43, 46, 1}, {48, 65535, 1}, },
            {{0, 32, -2}, {33, 41, 1}, {43, 65535, -3}, },
            {{0, 65535, -4}, },
            {{0, 65535, -4}, },
            {{0, 65535, -4}, },
            {{0, 46, -3}, {48, 57, 34}, {58, 64, 1}, {65, 90, 35}, {91, 96, 1}, {97, 122, 36}, {123, 65535, 1}, },
            {{32, 32, 37}, {47, 47, 38}, },
            {{0, 31, 1}, {32, 32, 39}, {33, 46, -4}, {48, 57, 40}, {58, 65535, 1}, },
            {{0, 31, 1}, {32, 32, 41}, {33, 46, -4}, {48, 57, 42}, {58, 65535, 1}, },
            {{32, 32, 43}, {42, 42, 44}, {47, 47, 45}, },
            {{0, 41, 1}, {43, 43, 1}, {44, 44, 46}, {45, 46, 1}, {48, 57, 47}, {58, 64, 1}, {65, 90, 48}, {91, 96, 1}, {97, 122, 49}, {123, 65535, 1}, },
            {{0, 46, -3}, {48, 60, 1}, {61, 61, 50}, {62, 65535, 1}, },
            {{0, 9, 1}, {10, 10, 51}, {11, 41, 1}, {43, 65535, -3}, },
            {{0, 31, 1}, {32, 32, 52}, {33, 46, -4}, {48, 60, 1}, {61, 61, 53}, {62, 65535, 1}, },
            {{0, 31, 1}, {32, 32, 54}, {33, 65535, -4}, },
            {{0, 31, 1}, {32, 32, 55}, {33, 60, -16}, {61, 61, 56}, {62, 65535, 1}, },
            {{0, 46, -3}, {48, 57, 57}, {58, 64, 1}, {65, 90, 17}, {91, 65535, -13}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 9, 1}, {10, 10, 58}, {11, 46, -15}, {48, 57, 59}, {58, 64, 1}, {65, 90, 60}, {91, 94, 1}, {95, 95, 61}, {96, 96, 1}, {97, 122, 62}, {123, 65535, 1}, },
            {{0, 46, -22}, {48, 57, 63}, {58, 64, 1}, {65, 90, 64}, {91, 96, -22}, {97, 117, 65}, {118, 118, 66}, {119, 122, 65}, {123, 65535, 1}, },
            {{0, 96, -23}, {97, 110, 65}, {111, 111, 67}, {112, 122, 65}, {123, 65535, 1}, },
            {{0, 96, -23}, {97, 97, 68}, {98, 122, 65}, {123, 65535, 1}, },
            {{0, 96, -23}, {97, 122, 65}, {123, 65535, 1}, },
            {{0, 10, -22}, {11, 31, 1}, {32, 32, 69}, {33, 46, -4}, {48, 96, -23}, {97, 109, 65}, {110, 110, 70}, {111, 122, 65}, {123, 65535, 1}, },
            {{0, 96, -23}, {97, 97, 71}, {98, 104, 65}, {105, 105, 72}, {106, 122, 65}, {123, 65535, 1}, },
            {{0, 96, -23}, {97, 109, 65}, {110, 110, 73}, {111, 65535, -27}, },
            {{0, 96, -23}, {97, 97, 74}, {98, 65535, -25}, },
            {{0, 96, -23}, {97, 116, 65}, {117, 117, 75}, {118, 122, 65}, {123, 65535, 1}, },
            {{0, 96, -23}, {97, 97, 76}, {98, 65535, -25}, },
            {{0, 96, -23}, {97, 100, 65}, {101, 101, 77}, {102, 122, 65}, {123, 65535, 1}, },
            {{0, 100, -33}, {101, 101, 78}, {102, 65535, -33}, },
            {{0, 100, -33}, {101, 101, 79}, {102, 65535, -33}, },
            {{0, 38, 1}, {39, 39, 80}, {40, 41, 1}, {43, 65535, -3}, },
            {{0, 46, -36}, {48, 64, 1}, {65, 90, 35}, {91, 65535, 1}, },
            {{0, 46, -36}, {48, 96, 1}, {97, 65535, -8}, },
            {{32, 32, 37}, },
            {},
            {{0, 46, -10}, {48, 65535, 1}, },
            {{0, 43, -13}, {44, 44, 81}, {45, 46, 1}, {48, 65535, -10}, },
            {{0, 46, -11}, {48, 65535, 1}, },
            {{0, 43, -13}, {44, 44, 82}, {45, 46, 1}, {48, 65535, -11}, },
            {{32, 32, 43}, },
            {},
            {{0, 9, 83}, {11, 12, 83}, {14, 65535, 83}, },
            {{0, 46, -3}, {48, 57, 84}, {58, 65535, 1}, },
            {{0, 65535, -13}, },
            {{0, 64, -19}, {65, 65535, -13}, },
            {{0, 65535, -50}, },
            {{0, 31, 1}, {32, 32, 85}, {33, 65535, -4}, },
            {{0, 65535, -3}, },
            {{0, 46, -16}, {48, 65535, 1}, },
            {{0, 31, 1}, {32, 32, 86}, {33, 65535, -4}, },
            {{0, 65535, -17}, },
            {{0, 46, -18}, {48, 65535, 1}, },
            {{0, 31, 1}, {32, 32, 87}, {33, 65535, -4}, },
            {{0, 65535, -50}, },
            {{0, 65535, -22}, },
            {{0, 65535, -22}, },
            {{0, 65535, -22}, },
            {{0, 65535, -22}, },
            {{0, 65535, -22}, },
            {{0, 96, -23}, {97, 122, 88}, {123, 65535, 1}, },
            {{0, 65535, -65}, },
            {{0, 65535, -26}, },
            {{0, 96, -23}, {97, 97, 89}, {98, 65535, -25}, },
            {{0, 110, -24}, {111, 111, 90}, {112, 65535, -24}, },
            {{0, 96, -23}, {97, 114, 65}, {115, 115, 91}, {116, 122, 65}, {123, 65535, 1}, },
            {{0, 31, 1}, {32, 46, -27}, {48, 65535, 1}, },
            {{0, 96, -23}, {97, 112, 65}, {113, 113, 92}, {114, 122, 65}, {123, 65535, 1}, },
            {{0, 96, -23}, {97, 107, 65}, {108, 108, 93}, {109, 122, 65}, {123, 65535, 1}, },
            {{0, 96, -23}, {97, 108, 65}, {109, 109, 94}, {110, 122, 65}, {123, 65535, 1}, },
            {{0, 96, -23}, {97, 104, 65}, {105, 105, 95}, {106, 115, 65}, {116, 116, 96}, {117, 122, 65}, {123, 65535, 1}, },
            {{0, 110, -24}, {111, 111, 97}, {112, 65535, -24}, },
            {{0, 31, -27}, {32, 32, 98}, {33, 96, -27}, {97, 65535, -26}, },
            {{0, 96, -23}, {97, 113, 65}, {114, 114, 99}, {115, 122, 65}, {123, 65535, 1}, },
            {{0, 96, -23}, {97, 97, 100}, {98, 65535, -25}, },
            {{0, 31, -27}, {32, 32, 101}, {33, 109, -27}, {110, 110, 102}, {111, 65535, -27}, },
            {{0, 113, -78}, {114, 114, 103}, {115, 65535, -78}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 57, 104}, {58, 65535, 1}, },
            {{0, 46, -3}, {48, 57, 105}, {58, 65535, 1}, },
            {{0, 65535, -47}, },
            {{0, 65535, -48}, },
            {{0, 65535, -52}, },
            {{0, 65535, -55}, },
            {{0, 65535, -58}, },
            {{0, 65535, -65}, },
            {{0, 107, -73}, {108, 108, 106}, {109, 65535, -73}, },
            {{0, 107, -73}, {108, 108, 107}, {109, 65535, -73}, },
            {{0, 110, -24}, {111, 111, 108}, {112, 65535, -24}, },
            {{0, 116, -31}, {117, 117, 109}, {118, 65535, -31}, },
            {{0, 114, -70}, {115, 115, 110}, {116, 65535, -70}, },
            {{0, 31, -27}, {32, 32, 111}, {33, 65535, -77}, },
            {{0, 96, -23}, {97, 98, 65}, {99, 99, 112}, {100, 122, 65}, {123, 65535, 1}, },
            {{0, 100, -33}, {101, 101, 113}, {102, 65535, -33}, },
            {{0, 31, -27}, {32, 32, 114}, {33, 65535, -77}, },
            {{0, 31, 1}, {32, 46, -77}, {48, 65535, 1}, },
            {{0, 96, -23}, {97, 97, 115}, {98, 65535, -25}, },
            {{0, 107, -73}, {108, 108, 116}, {109, 65535, -73}, },
            {{0, 31, 1}, {32, 46, -80}, {48, 65535, 1}, },
            {{0, 96, -23}, {97, 97, 117}, {98, 65535, -25}, },
            {{0, 96, -23}, {97, 99, 65}, {100, 100, 118}, {101, 122, 65}, {123, 65535, 1}, },
            {{0, 65535, -83}, },
            {{0, 65535, -84}, },
            {{0, 104, -75}, {105, 105, 119}, {106, 65535, -28}, },
            {{0, 100, -33}, {101, 101, 120}, {102, 65535, -33}, },
            {{0, 31, -27}, {32, 32, 121}, {33, 65535, -77}, },
            {{0, 96, -23}, {97, 97, 122}, {98, 65535, -25}, },
            {{0, 110, -24}, {111, 111, 123}, {112, 65535, -24}, },
            {{0, 31, 1}, {32, 46, -96}, {48, 65535, 1}, },
            {{0, 104, -75}, {105, 105, 124}, {106, 65535, -28}, },
            {{0, 104, -75}, {105, 105, 125}, {106, 65535, -28}, },
            {{0, 31, 1}, {32, 46, -99}, {48, 65535, 1}, },
            {{0, 31, -27}, {32, 32, 126}, {33, 65535, -77}, },
            {{0, 65535, -26}, },
            {{0, 110, -24}, {111, 111, 127}, {112, 65535, -24}, },
            {{0, 96, -23}, {97, 97, 128}, {98, 65535, -25}, },
            {{0, 100, -33}, {101, 101, 129}, {102, 65535, -33}, },
            {{0, 96, -23}, {97, 97, 130}, {98, 65535, -25}, },
            {{0, 31, 1}, {32, 46, -110}, {48, 65535, 1}, },
            {{0, 109, -29}, {110, 110, 131}, {111, 65535, -27}, },
            {{0, 31, -27}, {32, 32, 132}, {33, 65535, -77}, },
            {{0, 110, -24}, {111, 111, 133}, {112, 65535, -24}, },
            {{0, 113, -78}, {114, 114, 134}, {115, 65535, -78}, },
            {{0, 31, 1}, {32, 46, -117}, {48, 65535, 1}, },
            {{0, 31, -27}, {32, 32, 135}, {33, 65535, -77}, },
            {{0, 99, -105}, {100, 100, 136}, {101, 65535, -105}, },
            {{0, 31, -27}, {32, 32, 137}, {33, 65535, -77}, },
            {{0, 109, -29}, {110, 110, 138}, {111, 65535, -27}, },
            {{0, 96, -23}, {97, 115, 65}, {116, 116, 139}, {117, 65535, -75}, },
            {{0, 31, 1}, {32, 46, -125}, {48, 65535, 1}, },
            {{0, 31, -27}, {32, 32, 140}, {33, 65535, -77}, },
            {{0, 110, -24}, {111, 111, 141}, {112, 65535, -24}, },
            {{0, 31, 1}, {32, 46, -129}, {48, 65535, 1}, },
            {{0, 100, -33}, {101, 101, 142}, {102, 65535, -33}, },
            {{0, 31, 1}, {32, 46, -131}, {48, 65535, 1}, },
            {{0, 110, -24}, {111, 111, 143}, {112, 65535, -24}, },
            {{0, 110, -24}, {111, 111, 144}, {112, 65535, -24}, },
            {{0, 31, 1}, {32, 46, -135}, {48, 65535, 1}, },
            {{0, 65535, -26}, },
            {{0, 104, -75}, {105, 105, 145}, {106, 65535, -28}, },
            {{0, 65535, -26}, },
            {{0, 65535, -26}, },
            {{0, 113, -78}, {114, 114, 146}, {115, 65535, -78}, },
            {{0, 110, -24}, {111, 111, 147}, {112, 65535, -24}, },
            {{0, 31, -27}, {32, 32, 148}, {33, 65535, -77}, },
            {{0, 31, 1}, {32, 46, -149}, {48, 65535, 1}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // NORMAL
        {6, 6, 6, 6, 6, -1, 16, 14, 15, 17, 0, 11, 27, 19, 22, 18, 9, 7, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, 16, 14, 0, 15, 0, 17, 38, 5, -1, 0, 9, 9, 26, 27, 19, 21, 22, 18, 20, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 24, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, -1, -1, 5, 2, 26, 21, 20, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 25, 1, 1, 30, 1, 1, 2, 2, 1, 1, 1, 1, 1, 29, 1, 1, 23, 1, 1, 1, 1, 1, 1, 35, 1, 1, 1, 1, 33, 1, 1, 1, 1, 1, 37, 1, 1, 31, 1, 34, 1, 1, 28, 1, 1, 1, 1, 1, 1, 1, 36, },
        // COMMENT
        {6, 40, 6, 6, 6, 6, 40, 16, 14, 15, 17, 0, 11, 27, 19, 22, 18, 9, 7, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 40, 40, 40, 16, 39, 14, 0, 15, 0, 17, 38, 5, 40, 0, 9, 9, 26, 27, 19, 21, 22, 18, 20, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 24, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 40, 40, 5, 2, 26, 21, 20, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 25, 1, 1, 30, 1, 1, 2, 2, 1, 1, 1, 1, 1, 29, 1, 1, 23, 1, 1, 1, 1, 1, 1, 35, 1, 1, 1, 1, 33, 1, 1, 1, 1, 1, 37, 1, 1, 31, 1, 34, 1, 1, 28, 1, 1, 1, 1, 1, 1, 1, 36, },

    };*/

    public static class State
    {
        public final static State NORMAL = new State(0);
        public final static State COMMENT = new State(1);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
