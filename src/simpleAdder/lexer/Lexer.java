/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.lexer;

import java.io.*;
import simpleAdder.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.NORMAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                                case 0: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                                case 0: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 63:
                        {
                            @SuppressWarnings("hiding") Token token = new63(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumInt(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumReal(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBool(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TChar(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringLiteral(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReal(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteiro(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBooleano(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaractere(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConstante(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInicio(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimprograma(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPrograma(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEscreva(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSe(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFaca(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEntao(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSenao(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimse(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnquanto(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimenquanto(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPara(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimpara(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPasso(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAvalie(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimavalie(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaso(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAColchete(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFColchete(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAParentese(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFParentese(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLeia(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRepita(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAte(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDe(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNao(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TE(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOu(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXor(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtrib(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPontoevirg(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirg(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoispontos(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMais(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenos(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorq(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorq(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiori(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenori(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgual(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiferente(line, pos); }
    Token new54(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNovalinha(text, line, pos); }
    Token new55(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioBloco(line, pos); }
    Token new57(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioBlocFimErrado(line, pos); }
    Token new58(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioCorpo(text, line, pos); }
    Token new59(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEstrela(line, pos); }
    Token new60(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarra(line, pos); }
    Token new61(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentLin(text, line, pos); }
    Token new62(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new63(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentificador(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{4, 4, 1}, {9, 9, 2}, {10, 10, 3}, {12, 12, 4}, {13, 13, 5}, {32, 32, 6}, {37, 37, 7}, {39, 39, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {47, 47, 15}, {48, 57, 16}, {58, 58, 17}, {59, 59, 18}, {60, 60, 19}, {61, 61, 20}, {62, 62, 21}, {65, 90, 22}, {91, 91, 23}, {92, 92, 24}, {93, 93, 25}, {95, 95, 26}, {97, 97, 27}, {98, 98, 28}, {99, 99, 29}, {100, 100, 30}, {101, 101, 31}, {102, 102, 32}, {103, 104, 33}, {105, 105, 34}, {106, 107, 33}, {108, 108, 35}, {109, 109, 33}, {110, 110, 36}, {111, 111, 37}, {112, 112, 38}, {113, 113, 33}, {114, 114, 39}, {115, 115, 40}, {116, 117, 33}, {118, 118, 41}, {119, 119, 33}, {120, 120, 42}, {121, 122, 33}, },
            {{4, 32, -2}, },
            {{4, 32, -2}, },
            {{4, 32, -2}, },
            {{4, 32, -2}, },
            {{4, 9, -2}, {10, 10, 43}, {12, 32, -2}, },
            {{4, 32, -2}, },
            {},
            {{48, 57, 44}, {65, 90, 45}, {97, 122, 46}, },
            {},
            {},
            {{47, 47, 47}, },
            {{48, 57, 48}, },
            {},
            {{48, 57, 49}, },
            {{42, 42, 50}, },
            {{44, 44, 51}, {48, 57, 16}, },
            {{61, 61, 52}, },
            {},
            {{61, 61, 53}, {62, 62, 54}, },
            {},
            {{61, 61, 55}, },
            {{48, 57, 56}, {65, 90, 57}, {95, 95, 58}, {97, 122, 59}, },
            {},
            {{110, 110, 60}, },
            {},
            {{48, 57, 61}, {65, 90, 62}, {95, 95, 63}, {97, 122, 64}, },
            {{48, 95, -24}, {97, 115, 59}, {116, 116, 65}, {117, 117, 59}, {118, 118, 66}, {119, 122, 59}, },
            {{48, 95, -24}, {97, 110, 59}, {111, 111, 67}, {112, 122, 59}, },
            {{48, 95, -24}, {97, 97, 68}, {98, 110, 59}, {111, 111, 69}, {112, 122, 59}, },
            {{48, 95, -24}, {97, 100, 59}, {101, 101, 70}, {102, 122, 59}, },
            {{48, 95, -24}, {97, 109, 59}, {110, 110, 71}, {111, 114, 59}, {115, 115, 72}, {116, 122, 59}, },
            {{48, 95, -24}, {97, 97, 73}, {98, 104, 59}, {105, 105, 74}, {106, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 109, -33}, {110, 110, 75}, {111, 122, 59}, },
            {{48, 100, -32}, {101, 101, 76}, {102, 122, 59}, },
            {{48, 95, -24}, {97, 97, 77}, {98, 122, 59}, },
            {{48, 95, -24}, {97, 116, 59}, {117, 117, 78}, {118, 122, 59}, },
            {{48, 95, -24}, {97, 97, 79}, {98, 113, 59}, {114, 114, 80}, {115, 122, 59}, },
            {{48, 100, -32}, {101, 101, 81}, {102, 122, 59}, },
            {{48, 100, -32}, {101, 101, 82}, {102, 115, 59}, {116, 116, 83}, {117, 122, 59}, },
            {{48, 100, -32}, {101, 101, 84}, {102, 122, 59}, },
            {{48, 110, -30}, {111, 111, 85}, {112, 122, 59}, },
            {{4, 32, -2}, },
            {{39, 39, 86}, },
            {{39, 39, 86}, },
            {{39, 39, 86}, },
            {},
            {{44, 44, 87}, {48, 57, 48}, },
            {{44, 44, 88}, {48, 57, 49}, },
            {},
            {{48, 57, 89}, },
            {},
            {},
            {},
            {},
            {{48, 57, 56}, {65, 90, 90}, {95, 95, 58}, {97, 122, 91}, },
            {{48, 122, -24}, },
            {{48, 122, -58}, },
            {{48, 122, -24}, },
            {{92, 92, 24}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 100, -32}, {101, 101, 92}, {102, 122, 59}, },
            {{48, 95, -24}, {97, 97, 93}, {98, 122, 59}, },
            {{48, 110, -30}, {111, 111, 94}, {112, 122, 59}, },
            {{48, 95, -24}, {97, 113, 59}, {114, 114, 95}, {115, 115, 96}, {116, 122, 59}, },
            {{48, 109, -33}, {110, 110, 97}, {111, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 95, -24}, {97, 112, 59}, {113, 113, 98}, {114, 115, 59}, {116, 116, 99}, {117, 122, 59}, },
            {{48, 95, -24}, {97, 98, 59}, {99, 99, 100}, {100, 122, 59}, },
            {{48, 98, -74}, {99, 99, 101}, {100, 107, 59}, {108, 108, 102}, {109, 122, 59}, },
            {{48, 95, -24}, {97, 108, 59}, {109, 109, 103}, {110, 122, 59}, },
            {{48, 95, -24}, {97, 104, 59}, {105, 105, 104}, {106, 115, 59}, {116, 116, 105}, {117, 122, 59}, },
            {{48, 104, -77}, {105, 105, 106}, {106, 122, 59}, },
            {{48, 110, -30}, {111, 111, 107}, {112, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 113, -70}, {114, 114, 108}, {115, 115, 109}, {116, 122, 59}, },
            {{48, 110, -30}, {111, 111, 110}, {112, 122, 59}, },
            {{48, 95, -24}, {97, 97, 111}, {98, 111, 59}, {112, 112, 112}, {113, 122, 59}, },
            {{48, 109, -33}, {110, 110, 113}, {111, 122, 59}, },
            {{48, 113, -70}, {114, 114, 114}, {115, 122, 59}, },
            {{48, 113, -70}, {114, 114, 115}, {115, 122, 59}, },
            {{48, 113, -70}, {114, 114, 116}, {115, 122, 59}, },
            {},
            {{48, 57, 117}, },
            {{48, 57, 118}, },
            {{48, 57, 89}, },
            {{48, 122, -58}, },
            {{48, 122, -58}, },
            {{48, 122, -24}, },
            {{48, 95, -24}, {97, 107, 59}, {108, 108, 119}, {109, 122, 59}, },
            {{48, 107, -95}, {108, 108, 120}, {109, 122, 59}, },
            {{48, 95, -24}, {97, 97, 121}, {98, 122, 59}, },
            {{48, 110, -30}, {111, 111, 122}, {112, 122, 59}, },
            {{48, 95, -24}, {97, 114, 59}, {115, 115, 123}, {116, 122, 59}, },
            {{48, 116, -39}, {117, 117, 124}, {118, 122, 59}, },
            {{48, 95, -24}, {97, 97, 125}, {98, 122, 59}, },
            {{48, 113, -70}, {114, 114, 126}, {115, 122, 59}, },
            {{48, 95, -24}, {97, 97, 127}, {98, 122, 59}, },
            {{48, 114, -99}, {115, 115, 128}, {116, 122, 59}, },
            {{32, 32, 129}, {46, 46, 130}, {48, 122, -24}, },
            {{48, 98, -74}, {99, 99, 131}, {100, 122, 59}, },
            {{48, 100, -32}, {101, 101, 132}, {102, 122, 59}, },
            {{48, 95, -24}, {97, 97, 133}, {98, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 95, -24}, {97, 97, 134}, {98, 122, 59}, },
            {{48, 114, -99}, {115, 115, 135}, {116, 122, 59}, },
            {{48, 95, -24}, {97, 102, 59}, {103, 103, 136}, {104, 122, 59}, },
            {{48, 107, -95}, {108, 108, 137}, {109, 122, 59}, },
            {{48, 104, -77}, {105, 105, 138}, {106, 122, 59}, },
            {{48, 95, -24}, {97, 97, 139}, {98, 122, 59}, },
            {{48, 104, -77}, {105, 105, 140}, {106, 122, 59}, },
            {{48, 95, -24}, {97, 99, 59}, {100, 100, 141}, {101, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 57, 117}, },
            {{48, 57, 118}, },
            {{48, 104, -77}, {105, 105, 142}, {106, 122, 59}, },
            {{48, 100, -32}, {101, 101, 143}, {102, 122, 59}, },
            {{48, 98, -74}, {99, 99, 144}, {100, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 115, -29}, {116, 116, 145}, {117, 122, 59}, },
            {{48, 95, -24}, {97, 97, 146}, {98, 122, 59}, },
            {{48, 110, -30}, {111, 111, 147}, {112, 122, 59}, },
            {{48, 100, -32}, {101, 101, 148}, {102, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 110, -30}, {111, 111, 149}, {112, 122, 59}, },
            {{97, 97, 150}, {101, 101, 151}, {112, 112, 152}, {115, 115, 153}, },
            {},
            {{48, 104, -77}, {105, 105, 154}, {106, 122, 59}, },
            {{48, 104, -77}, {105, 105, 155}, {106, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 110, -30}, {111, 111, 156}, {112, 122, 59}, },
            {{48, 113, -70}, {114, 114, 157}, {115, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 115, -29}, {116, 116, 158}, {117, 122, 59}, },
            {{48, 110, -30}, {111, 111, 159}, {112, 122, 59}, },
            {{48, 109, -33}, {110, 110, 160}, {111, 122, 59}, },
            {{48, 95, -24}, {97, 97, 161}, {98, 122, 59}, },
            {{48, 100, -32}, {101, 101, 162}, {102, 122, 59}, },
            {{48, 95, -24}, {97, 97, 163}, {98, 122, 59}, },
            {{48, 115, -29}, {116, 116, 164}, {117, 122, 59}, },
            {{48, 95, -24}, {97, 97, 165}, {98, 122, 59}, },
            {{48, 109, -33}, {110, 110, 166}, {111, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 95, -24}, {97, 117, 59}, {118, 118, 167}, {119, 122, 59}, },
            {{48, 122, -24}, },
            {{118, 118, 168}, },
            {{110, 110, 169}, },
            {{97, 97, 170}, },
            {{101, 101, 171}, },
            {{48, 110, -30}, {111, 111, 172}, {112, 122, 59}, },
            {{48, 113, -70}, {114, 114, 173}, {115, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 95, -24}, {97, 97, 174}, {98, 122, 59}, },
            {{48, 95, -24}, {97, 97, 175}, {98, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 102, -112}, {103, 103, 176}, {104, 122, 59}, },
            {{48, 99, -117}, {100, 100, 177}, {101, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 109, -33}, {110, 110, 178}, {111, 122, 59}, },
            {{48, 100, -32}, {101, 101, 179}, {102, 122, 59}, },
            {{48, 109, -33}, {110, 110, 180}, {111, 122, 59}, },
            {{48, 115, -29}, {116, 116, 181}, {117, 122, 59}, },
            {{48, 95, -24}, {97, 97, 182}, {98, 122, 59}, },
            {{97, 97, 183}, },
            {{113, 113, 184}, },
            {{114, 114, 185}, },
            {},
            {{48, 122, -24}, },
            {{48, 110, -30}, {111, 111, 186}, {112, 122, 59}, },
            {{48, 108, -76}, {109, 109, 187}, {110, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 90, -24}, {95, 95, 188}, {97, 122, 59}, },
            {{48, 100, -32}, {101, 101, 189}, {102, 122, 59}, },
            {{48, 110, -30}, {111, 111, 190}, {112, 122, 59}, },
            {{48, 113, -70}, {114, 114, 191}, {115, 122, 59}, },
            {{48, 115, -29}, {116, 116, 192}, {117, 122, 59}, },
            {{48, 110, -30}, {111, 111, 193}, {112, 122, 59}, },
            {{48, 122, -24}, },
            {{108, 108, 194}, },
            {{117, 117, 195}, },
            {{97, 97, 196}, },
            {{48, 122, -24}, },
            {{48, 95, -24}, {97, 97, 197}, {98, 122, 59}, },
            {{48, 95, -58}, {97, 107, 91}, {108, 108, 198}, {109, 122, 91}, },
            {{48, 104, -77}, {105, 105, 199}, {106, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 100, -32}, {101, 101, 200}, {102, 122, 59}, },
            {{48, 100, -32}, {101, 101, 201}, {102, 122, 59}, },
            {{48, 122, -24}, },
            {{105, 105, 202}, },
            {{97, 97, 203}, },
            {},
            {{48, 122, -24}, },
            {{48, 95, -58}, {97, 104, 91}, {105, 105, 204}, {106, 122, 91}, },
            {{48, 113, -70}, {114, 114, 205}, {115, 122, 59}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{101, 101, 206}, },
            {{110, 110, 207}, },
            {{48, 95, -58}, {97, 115, 91}, {116, 116, 208}, {117, 122, 91}, },
            {{48, 110, -30}, {111, 111, 209}, {112, 122, 59}, },
            {},
            {{116, 116, 210}, },
            {{48, 95, -58}, {97, 100, 91}, {101, 101, 211}, {102, 122, 91}, },
            {{48, 122, -24}, },
            {{111, 111, 212}, },
            {{48, 95, -58}, {97, 113, 91}, {114, 114, 213}, {115, 122, 91}, },
            {},
            {{48, 95, -58}, {97, 97, 214}, {98, 122, 91}, },
            {{48, 107, -190}, {108, 108, 215}, {109, 122, 91}, },
            {{48, 122, -58}, },
        }
        { // COMENTARIO
            {{0, 3, 1}, {4, 4, 2}, {5, 8, 1}, {9, 9, 3}, {10, 10, 4}, {11, 11, 1}, {12, 12, 5}, {13, 13, 6}, {14, 31, 1}, {32, 32, 7}, {33, 36, 1}, {37, 37, 8}, {38, 38, 1}, {39, 39, 9}, {40, 40, 10}, {41, 41, 11}, {42, 42, 12}, {43, 43, 13}, {44, 44, 14}, {45, 45, 15}, {46, 46, 1}, {47, 47, 16}, {48, 57, 17}, {58, 58, 18}, {59, 59, 19}, {60, 60, 20}, {61, 61, 21}, {62, 62, 22}, {63, 64, 1}, {65, 90, 23}, {91, 91, 24}, {92, 92, 25}, {93, 93, 26}, {94, 94, 1}, {95, 95, 27}, {96, 96, 1}, {97, 97, 28}, {98, 98, 29}, {99, 99, 30}, {100, 100, 31}, {101, 101, 32}, {102, 102, 33}, {103, 104, 34}, {105, 105, 35}, {106, 107, 34}, {108, 108, 36}, {109, 109, 34}, {110, 110, 37}, {111, 111, 38}, {112, 112, 39}, {113, 113, 34}, {114, 114, 40}, {115, 115, 41}, {116, 117, 34}, {118, 118, 42}, {119, 119, 34}, {120, 120, 43}, {121, 122, 34}, {123, 65535, 1}, },
            {{0, 41, 1}, {43, 46, 1}, {48, 65535, 1}, },
            {{0, 32, -2}, {33, 41, 1}, {43, 65535, -3}, },
            {{0, 65535, -4}, },
            {{0, 65535, -4}, },
            {{0, 65535, -4}, },
            {{0, 9, -2}, {10, 10, 44}, {11, 65535, -4}, },
            {{0, 65535, -4}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 57, 45}, {58, 64, 1}, {65, 90, 46}, {91, 96, 1}, {97, 122, 47}, {123, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{47, 47, 48}, },
            {{0, 46, -3}, {48, 57, 49}, {58, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 57, 50}, {58, 65535, 1}, },
            {{42, 42, 51}, {47, 47, 52}, },
            {{0, 41, 1}, {43, 43, 1}, {44, 44, 53}, {45, 46, 1}, {48, 57, 17}, {58, 65535, 1}, },
            {{0, 46, -3}, {48, 60, 1}, {61, 61, 54}, {62, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 60, -20}, {61, 61, 55}, {62, 62, 56}, {63, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 60, -20}, {61, 61, 57}, {62, 65535, 1}, },
            {{0, 46, -3}, {48, 57, 58}, {58, 64, 1}, {65, 90, 59}, {91, 94, 1}, {95, 95, 60}, {96, 96, 1}, {97, 122, 61}, {123, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 109, 1}, {110, 110, 62}, {111, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 57, 63}, {58, 64, 1}, {65, 90, 64}, {91, 94, 1}, {95, 95, 65}, {96, 96, 1}, {97, 122, 66}, {123, 65535, 1}, },
            {{0, 96, -25}, {97, 115, 61}, {116, 116, 67}, {117, 117, 61}, {118, 118, 68}, {119, 122, 61}, {123, 65535, 1}, },
            {{0, 96, -25}, {97, 110, 61}, {111, 111, 69}, {112, 122, 61}, {123, 65535, 1}, },
            {{0, 96, -25}, {97, 97, 70}, {98, 110, 61}, {111, 111, 71}, {112, 65535, -31}, },
            {{0, 96, -25}, {97, 100, 61}, {101, 101, 72}, {102, 122, 61}, {123, 65535, 1}, },
            {{0, 96, -25}, {97, 109, 61}, {110, 110, 73}, {111, 114, 61}, {115, 115, 74}, {116, 122, 61}, {123, 65535, 1}, },
            {{0, 96, -25}, {97, 97, 75}, {98, 104, 61}, {105, 105, 76}, {106, 122, 61}, {123, 65535, 1}, },
            {{0, 65535, -25}, },
            {{0, 109, -34}, {110, 110, 77}, {111, 122, 61}, {123, 65535, 1}, },
            {{0, 100, -33}, {101, 101, 78}, {102, 65535, -33}, },
            {{0, 96, -25}, {97, 97, 79}, {98, 122, 61}, {123, 65535, 1}, },
            {{0, 96, -25}, {97, 116, 61}, {117, 117, 80}, {118, 122, 61}, {123, 65535, 1}, },
            {{0, 96, -25}, {97, 97, 81}, {98, 113, 61}, {114, 114, 82}, {115, 122, 61}, {123, 65535, 1}, },
            {{0, 100, -33}, {101, 101, 83}, {102, 65535, -33}, },
            {{0, 100, -33}, {101, 101, 84}, {102, 115, 61}, {116, 116, 85}, {117, 122, 61}, {123, 65535, 1}, },
            {{0, 100, -33}, {101, 101, 86}, {102, 65535, -33}, },
            {{0, 110, -31}, {111, 111, 87}, {112, 65535, -31}, },
            {{0, 65535, -4}, },
            {{0, 38, 1}, {39, 39, 88}, {40, 41, 1}, {43, 65535, -3}, },
            {{0, 65535, -47}, },
            {{0, 65535, -47}, },
            {},
            {{0, 43, -19}, {44, 44, 89}, {45, 46, 1}, {48, 65535, -15}, },
            {{0, 43, -19}, {44, 44, 90}, {45, 46, 1}, {48, 65535, -17}, },
            {},
            {{0, 9, 91}, {11, 12, 91}, {14, 41, 91}, {43, 46, 91}, {48, 65535, 91}, },
            {{0, 46, -3}, {48, 57, 92}, {58, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 64, -25}, {65, 90, 93}, {91, 96, -25}, {97, 122, 94}, {123, 65535, 1}, },
            {{0, 65535, -25}, },
            {{0, 65535, -60}, },
            {{0, 65535, -25}, },
            {{0, 46, -3}, {48, 91, 1}, {92, 92, 25}, {93, 65535, 1}, },
            {{0, 65535, -29}, },
            {{0, 65535, -29}, },
            {{0, 65535, -29}, },
            {{0, 65535, -29}, },
            {{0, 100, -33}, {101, 101, 95}, {102, 65535, -33}, },
            {{0, 96, -25}, {97, 97, 96}, {98, 65535, -39}, },
            {{0, 110, -31}, {111, 111, 97}, {112, 65535, -31}, },
            {{0, 96, -25}, {97, 113, 61}, {114, 114, 98}, {115, 115, 99}, {116, 65535, -34}, },
            {{0, 109, -34}, {110, 110, 100}, {111, 65535, -37}, },
            {{0, 65535, -25}, },
            {{0, 96, -25}, {97, 112, 61}, {113, 113, 101}, {114, 115, 61}, {116, 116, 102}, {117, 65535, -43}, },
            {{0, 96, -25}, {97, 98, 61}, {99, 99, 103}, {100, 122, 61}, {123, 65535, 1}, },
            {{0, 98, -76}, {99, 99, 104}, {100, 107, 61}, {108, 108, 105}, {109, 122, 61}, {123, 65535, 1}, },
            {{0, 96, -25}, {97, 108, 61}, {109, 109, 106}, {110, 122, 61}, {123, 65535, 1}, },
            {{0, 96, -25}, {97, 104, 61}, {105, 105, 107}, {106, 115, 61}, {116, 116, 108}, {117, 65535, -43}, },
            {{0, 104, -79}, {105, 105, 109}, {106, 65535, -35}, },
            {{0, 110, -31}, {111, 111, 110}, {112, 65535, -31}, },
            {{0, 65535, -25}, },
            {{0, 113, -72}, {114, 114, 111}, {115, 115, 112}, {116, 65535, -34}, },
            {{0, 110, -31}, {111, 111, 113}, {112, 65535, -31}, },
            {{0, 96, -25}, {97, 97, 114}, {98, 111, 61}, {112, 112, 115}, {113, 122, 61}, {123, 65535, 1}, },
            {{0, 109, -34}, {110, 110, 116}, {111, 65535, -37}, },
            {{0, 113, -72}, {114, 114, 117}, {115, 65535, -41}, },
            {{0, 113, -72}, {114, 114, 118}, {115, 65535, -41}, },
            {{0, 113, -72}, {114, 114, 119}, {115, 65535, -41}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 57, 120}, {58, 65535, 1}, },
            {{0, 46, -3}, {48, 57, 121}, {58, 65535, 1}, },
            {{0, 65535, -54}, },
            {{0, 65535, -55}, },
            {{0, 65535, -60}, },
            {{0, 65535, -60}, },
            {{0, 65535, -25}, },
            {{0, 96, -25}, {97, 107, 61}, {108, 108, 122}, {109, 65535, -77}, },
            {{0, 107, -98}, {108, 108, 123}, {109, 65535, -77}, },
            {{0, 96, -25}, {97, 97, 124}, {98, 65535, -39}, },
            {{0, 110, -31}, {111, 111, 125}, {112, 65535, -31}, },
            {{0, 96, -25}, {97, 114, 61}, {115, 115, 126}, {116, 65535, -34}, },
            {{0, 116, -40}, {117, 117, 127}, {118, 65535, -40}, },
            {{0, 96, -25}, {97, 97, 128}, {98, 65535, -39}, },
            {{0, 113, -72}, {114, 114, 129}, {115, 65535, -41}, },
            {{0, 96, -25}, {97, 97, 130}, {98, 65535, -39}, },
            {{0, 114, -102}, {115, 115, 131}, {116, 65535, -34}, },
            {{0, 31, 1}, {32, 32, 132}, {33, 41, 1}, {43, 45, 1}, {46, 46, 133}, {48, 65535, -25}, },
            {{0, 98, -76}, {99, 99, 134}, {100, 65535, -76}, },
            {{0, 100, -33}, {101, 101, 135}, {102, 65535, -33}, },
            {{0, 96, -25}, {97, 97, 136}, {98, 65535, -39}, },
            {{0, 65535, -25}, },
            {{0, 96, -25}, {97, 97, 137}, {98, 65535, -39}, },
            {{0, 114, -102}, {115, 115, 138}, {116, 65535, -34}, },
            {{0, 96, -25}, {97, 102, 61}, {103, 103, 139}, {104, 122, 61}, {123, 65535, 1}, },
            {{0, 107, -98}, {108, 108, 140}, {109, 65535, -77}, },
            {{0, 104, -79}, {105, 105, 141}, {106, 65535, -35}, },
            {{0, 96, -25}, {97, 97, 142}, {98, 65535, -39}, },
            {{0, 104, -79}, {105, 105, 143}, {106, 65535, -35}, },
            {{0, 96, -25}, {97, 99, 61}, {100, 100, 144}, {101, 122, 61}, {123, 65535, 1}, },
            {{0, 65535, -25}, },
            {{0, 65535, -91}, },
            {{0, 65535, -92}, },
            {{0, 104, -79}, {105, 105, 145}, {106, 65535, -35}, },
            {{0, 100, -33}, {101, 101, 146}, {102, 65535, -33}, },
            {{0, 98, -76}, {99, 99, 147}, {100, 65535, -76}, },
            {{0, 65535, -25}, },
            {{0, 115, -30}, {116, 116, 148}, {117, 65535, -43}, },
            {{0, 96, -25}, {97, 97, 149}, {98, 65535, -39}, },
            {{0, 110, -31}, {111, 111, 150}, {112, 65535, -31}, },
            {{0, 100, -33}, {101, 101, 151}, {102, 65535, -33}, },
            {{0, 65535, -25}, },
            {{0, 110, -31}, {111, 111, 152}, {112, 65535, -31}, },
            {{0, 46, -3}, {48, 96, 1}, {97, 97, 153}, {98, 100, 1}, {101, 101, 154}, {102, 111, 1}, {112, 112, 155}, {113, 114, 1}, {115, 115, 156}, {116, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 104, -79}, {105, 105, 157}, {106, 65535, -35}, },
            {{0, 104, -79}, {105, 105, 158}, {106, 65535, -35}, },
            {{0, 65535, -25}, },
            {{0, 65535, -25}, },
            {{0, 110, -31}, {111, 111, 159}, {112, 65535, -31}, },
            {{0, 113, -72}, {114, 114, 160}, {115, 65535, -41}, },
            {{0, 65535, -25}, },
            {{0, 115, -30}, {116, 116, 161}, {117, 65535, -43}, },
            {{0, 110, -31}, {111, 111, 162}, {112, 65535, -31}, },
            {{0, 109, -34}, {110, 110, 163}, {111, 65535, -37}, },
            {{0, 96, -25}, {97, 97, 164}, {98, 65535, -39}, },
            {{0, 100, -33}, {101, 101, 165}, {102, 65535, -33}, },
            {{0, 96, -25}, {97, 97, 166}, {98, 65535, -39}, },
            {{0, 115, -30}, {116, 116, 167}, {117, 65535, -43}, },
            {{0, 96, -25}, {97, 97, 168}, {98, 65535, -39}, },
            {{0, 109, -34}, {110, 110, 169}, {111, 65535, -37}, },
            {{0, 65535, -25}, },
            {{0, 96, -25}, {97, 117, 61}, {118, 118, 170}, {119, 65535, -30}, },
            {{0, 65535, -25}, },
            {{0, 46, -3}, {48, 117, 1}, {118, 118, 171}, {119, 65535, 1}, },
            {{0, 109, -27}, {110, 110, 172}, {111, 65535, 1}, },
            {{0, 96, -134}, {97, 97, 173}, {98, 65535, 1}, },
            {{0, 46, -3}, {48, 100, 1}, {101, 101, 174}, {102, 65535, 1}, },
            {{0, 110, -31}, {111, 111, 175}, {112, 65535, -31}, },
            {{0, 113, -72}, {114, 114, 176}, {115, 65535, -41}, },
            {{0, 65535, -25}, },
            {{0, 96, -25}, {97, 97, 177}, {98, 65535, -39}, },
            {{0, 96, -25}, {97, 97, 178}, {98, 65535, -39}, },
            {{0, 65535, -25}, },
            {{0, 102, -115}, {103, 103, 179}, {104, 65535, -115}, },
            {{0, 99, -120}, {100, 100, 180}, {101, 65535, -120}, },
            {{0, 65535, -25}, },
            {{0, 109, -34}, {110, 110, 181}, {111, 65535, -37}, },
            {{0, 100, -33}, {101, 101, 182}, {102, 65535, -33}, },
            {{0, 109, -34}, {110, 110, 183}, {111, 65535, -37}, },
            {{0, 115, -30}, {116, 116, 184}, {117, 65535, -43}, },
            {{0, 96, -25}, {97, 97, 185}, {98, 65535, -39}, },
            {{0, 96, -134}, {97, 97, 186}, {98, 65535, 1}, },
            {{0, 46, -3}, {48, 112, 1}, {113, 113, 187}, {114, 65535, 1}, },
            {{0, 46, -3}, {48, 113, 1}, {114, 114, 188}, {115, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -25}, },
            {{0, 110, -31}, {111, 111, 189}, {112, 65535, -31}, },
            {{0, 108, -78}, {109, 109, 190}, {110, 65535, -78}, },
            {{0, 65535, -25}, },
            {{0, 94, -25}, {95, 95, 191}, {96, 65535, -25}, },
            {{0, 100, -33}, {101, 101, 192}, {102, 65535, -33}, },
            {{0, 110, -31}, {111, 111, 193}, {112, 65535, -31}, },
            {{0, 113, -72}, {114, 114, 194}, {115, 65535, -41}, },
            {{0, 115, -30}, {116, 116, 195}, {117, 65535, -43}, },
            {{0, 110, -31}, {111, 111, 196}, {112, 65535, -31}, },
            {{0, 65535, -25}, },
            {{0, 46, -3}, {48, 107, 1}, {108, 108, 197}, {109, 65535, 1}, },
            {{0, 46, -3}, {48, 116, 1}, {117, 117, 198}, {118, 65535, 1}, },
            {{0, 96, -134}, {97, 97, 199}, {98, 65535, 1}, },
            {{0, 65535, -25}, },
            {{0, 96, -25}, {97, 97, 200}, {98, 65535, -39}, },
            {{0, 96, -60}, {97, 107, 94}, {108, 108, 201}, {109, 122, 94}, {123, 65535, 1}, },
            {{0, 104, -79}, {105, 105, 202}, {106, 65535, -35}, },
            {{0, 65535, -25}, },
            {{0, 100, -33}, {101, 101, 203}, {102, 65535, -33}, },
            {{0, 100, -33}, {101, 101, 204}, {102, 65535, -33}, },
            {{0, 65535, -25}, },
            {{0, 46, -3}, {48, 104, 1}, {105, 105, 205}, {106, 65535, 1}, },
            {{0, 96, -134}, {97, 97, 206}, {98, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -25}, },
            {{0, 96, -60}, {97, 104, 94}, {105, 105, 207}, {106, 122, 94}, {123, 65535, 1}, },
            {{0, 113, -72}, {114, 114, 208}, {115, 65535, -41}, },
            {{0, 65535, -25}, },
            {{0, 65535, -25}, },
            {{0, 100, -158}, {101, 101, 209}, {102, 65535, 1}, },
            {{0, 109, -27}, {110, 110, 210}, {111, 65535, 1}, },
            {{0, 96, -60}, {97, 115, 94}, {116, 116, 211}, {117, 122, 94}, {123, 65535, 1}, },
            {{0, 110, -31}, {111, 111, 212}, {112, 65535, -31}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 115, 1}, {116, 116, 213}, {117, 65535, 1}, },
            {{0, 96, -60}, {97, 100, 94}, {101, 101, 214}, {102, 122, 94}, {123, 65535, 1}, },
            {{0, 65535, -25}, },
            {{0, 46, -3}, {48, 110, 1}, {111, 111, 215}, {112, 65535, 1}, },
            {{0, 96, -60}, {97, 113, 94}, {114, 114, 216}, {115, 122, 94}, {123, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 96, -60}, {97, 97, 217}, {98, 122, 94}, {123, 65535, 1}, },
            {{0, 107, -193}, {108, 108, 218}, {109, 65535, -193}, },
            {{0, 65535, -60}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // NORMAL
        {55, 55, 55, 55, 55, 55, 55, 47, -1, 29, 30, 45, 43, 41, 44, 46, 0, 42, 40, 49, 52, 48, 62, 27, -1, 28, 62, 62, 62, 62, 62, 36, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 55, -1, -1, -1, 57, 0, 0, 56, -1, 39, 51, 53, 50, 62, 62, 62, 62, 54, 62, 62, 62, 62, 62, 62, 62, 62, 62, 34, 62, 62, 62, 62, 62, 62, 62, 37, 62, 62, 62, 14, 62, 62, 62, 3, -1, -1, 1, 62, 62, 33, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 35, 62, 62, 62, 62, 62, 62, 62, 62, 38, 1, 1, 62, 62, 62, 26, 62, 62, 62, 62, 15, 62, -1, 11, 62, 62, 31, 21, 62, 62, 5, 62, 62, 62, 62, 62, 62, 62, 62, 62, 16, 62, 2, -1, -1, -1, -1, 62, 62, 23, 62, 62, 17, 62, 62, 24, 62, 62, 62, 62, 62, -1, -1, -1, 18, 10, 62, 62, 32, 62, 62, 62, 62, 62, 62, 13, -1, -1, -1, 6, 62, 62, 62, 7, 62, 62, 19, -1, -1, 22, 12, 62, 62, 8, 9, -1, -1, 62, 62, 25, -1, 62, 2, -1, 62, 20, 62, 62, 4, },
        // COMENTARIO
        {55, 58, 55, 55, 55, 55, 55, 55, 47, 58, 29, 30, 45, 43, 41, 44, 46, 0, 42, 40, 49, 52, 48, 58, 27, 58, 28, 58, 58, 58, 58, 58, 36, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 55, 58, 58, 58, 57, 0, 0, 56, 61, 58, 39, 51, 53, 50, 58, 58, 58, 58, 54, 58, 58, 58, 58, 58, 58, 58, 58, 58, 34, 58, 58, 58, 58, 58, 58, 58, 37, 58, 58, 58, 14, 58, 58, 58, 3, 58, 58, 61, 1, 58, 58, 33, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 35, 58, 58, 58, 58, 58, 58, 58, 58, 38, 1, 1, 58, 58, 58, 26, 58, 58, 58, 58, 15, 58, 58, 11, 58, 58, 31, 21, 58, 58, 5, 58, 58, 58, 58, 58, 58, 58, 58, 58, 16, 58, 2, 58, 58, 58, 58, 58, 58, 23, 58, 58, 17, 58, 58, 24, 58, 58, 58, 58, 58, 58, 58, 58, 18, 10, 58, 58, 32, 58, 58, 58, 58, 58, 58, 13, 58, 58, 58, 6, 58, 58, 58, 7, 58, 58, 19, 58, 58, 22, 12, 58, 58, 8, 9, 58, 58, 58, 58, 25, 58, 58, 2, 58, 58, 20, 58, 58, 4, },

    };*/

    public static class State
    {
        public final static State NORMAL = new State(0);
        public final static State COMENTARIO = new State(1);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
